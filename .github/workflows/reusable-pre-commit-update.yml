---
on:
  workflow_call:

permissions: {}

jobs:
  pre-commit-update:
    name: pre-commit Update
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Harden Runner
        if: github.event.repository.private == false
        id: harden_runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        id: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set Up UV
        id: setup_uv
        uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0

      - name: Update pre-commit
        id: update_pre_commit
        run: |
          uvx pre-commit autoupdate --freeze

      - name: Check for changes
        id: check_changes
        run: |
          if ! git diff --exit-code .pre-commit-config.yaml; then
            echo "Changes detected in pre-commit configuration"
            echo "changed=true" >>"${GITHUB_ENV}"
          else
            echo "No changes detected"
            echo "changed=false" >>"${GITHUB_ENV}"
          fi

      - name: Create branch
        id: create_branch
        if: env.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          branchName="pre-commit-update-$(date +%Y%m%d%H%M%S)"
          export branchName
          echo "branchName=${branchName}" >>"${GITHUB_ENV}"

          gh api \
            --method POST "/repos/${{ github.repository }}/git/refs" \
            --raw-field ref="refs/heads/${branchName}" \
            --raw-field sha="$(git rev-parse HEAD)"

      - name: Commit changes
        if: env.changed == 'true'
        id: commit_changes
        uses: planetscale/ghcommit-action@f24050e41f8694750427d111b52f4ef9ca81a32d # v0.2.18
        with:
          commit_message: "ðŸ¤– Update .pre-commit-config.yaml"
          file_pattern: ".pre-commit-config.yaml"
          repo: ${{ github.repository }}
          branch: ${{ env.branchName }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find previous pull request
        id: find_previous_pr
        if: env.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          previousPullRequest=$(gh pr list --app "github-actions" --state open --search "ðŸ¤– pre-commit version update" --json "number" | jq -r '.[].number')
          export previousPullRequest

          if [[ -z "${previousPullRequest}" ]]; then
            echo "No previous pull request found"
          else
            echo "Found previous pull request: ${previousPullRequest}"
            echo "previousPullRequest=${previousPullRequest}" >>"${GITHUB_ENV}"
          fi

      - name: Create pull request
        if: env.changed == 'true'
        id: create_pull_request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ env.branchName }}
        run: |
          pullRequestUrl=$(gh pr create \
            --title "ðŸ¤– pre-commit version update" \
            --body "This pull request updates the pre-commit configuration to the latest available versions." \
            --head "${BRANCH_NAME}" \
            --base "main")
          export pullRequestUrl
          echo "pullRequestUrl=${pullRequestUrl}" >>"${GITHUB_ENV}"

      - name: Close previous pull request
        if: env.changed == 'true' && env.previousPullRequest != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIOUS_PULL_REQUEST: ${{ env.previousPullRequest }}
          NEW_PULL_REQUEST: ${{ env.pullRequestUrl }}
        run: |
          gh pr close "${PREVIOUS_PULL_REQUEST}" --comment "Superseded by ${NEW_PULL_REQUEST}" --delete-branch
