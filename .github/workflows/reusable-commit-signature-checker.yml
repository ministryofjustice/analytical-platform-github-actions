---
on:
  workflow_call:

permissions: {}

jobs:
  commit-signature-checker:
    name: Commit Signature Checker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Harden Runner
        if: github.event.repository.private == false
        id: harden_runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        id: checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Check for unverified commits
        id: check_unverified_commits
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const unverified = commits.filter(commit => !commit.commit.verification.verified);

            if (unverified.length > 0) {
              const message = `⚠️ This pull request contains ${unverified.length} commit(s) without verified signatures. Please sign your commits. More information on this is available [here](https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits).`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: message,
              });

              // Fail the workflow
              throw new Error(`Found ${unverified.length} unverified commit(s).`);
            }
